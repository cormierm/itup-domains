<?php

namespace App\Jobs;

use App\Hostname;
use App\Mail\ActivationError;
use Aws\Credentials\Credentials;
use Aws\Route53\Route53Client;
use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Foundation\Bus\Dispatchable;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Queue\SerializesModels;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Mail;
use Throwable;

class CreateRecordSet implements ShouldQueue
{
    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;

    /**
     * @var Hostname
     */
    private $hostname;

    public function __construct(Hostname $hostname)
    {
        $this->hostname = $hostname;
    }

    public function handle(Route53Client $route53Client): void
    {
        try {
            $route53Client->changeResourceRecordSets([
                'HostedZoneId' => config('itup.hostedZoneId'),
                'ChangeBatch' => [
                    'Comment' => 'Generated by ' . config('app.name'),
                    'Changes' => [
                        [
                            'Action' => 'CREATE',
                            'ResourceRecordSet' => [
                                'Name' => $this->hostname->fullName() . '.',
                                'TTL' => 300,
                                'Type' => 'A',
                                'ResourceRecords' => [
                                    [
                                        'Value' => $this->hostname->ip
                                    ],
                                ],
                            ]
                        ],
                    ],
                ]
            ]);
        } catch (Throwable $e) {
            Log::error('Could not register ' . $this->hostname->name, [
                'hostname' => $this->hostname,
                'exception' => $e,
            ]);

            Mail::to($this->hostname->email)->send(new ActivationError($this->hostname));

            $this->hostname->delete();
        }
    }
}
